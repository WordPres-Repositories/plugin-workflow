<?php
/**
 * Plugin Name:     Landing Page Tools
 * Plugin URI:      PLUGIN SITE HERE
 * Description:     PLUGIN DESCRIPTION HERE
 * Author:          YOUR NAME HERE
 * Author URI:      YOUR SITE HERE
 * Text Domain:     landing-page-tools
 * Domain Path:     /languages
 * Version:         2.0.0
 *
 * @package         Landing_Page_Tools
 */

// Your code starts here.
//defined('ABSPATH') || exit;

final class Plugin 
{
    private static $_instance = null; // propriedade estatica responsavel por guardar a instancia do nosso objeto. iniciando como null

    /**
     * The singleton's constructor should always be private to prevent direct
     * construction calls with the `new` operator.
     */
    protected function __constructor() { }

    /**
     * Singletons should not be cloneable.
     */
    protected function __clone() { }

    /**
     * Singletons should not be restorable from strings. 
     */
    public function __wakeup() { }

    // responsavel por retorna a mesma instancia da classe plugin
    public static function getInstance(): ?Plugin
    {
        if ( is_null( self::$_instance )) {
            self::$_instance = new self();
        }

        return self::$_instance;
    }

    private $version = "0.1.0";

    public function checkInstance() 
    {
        echo "Este é o Objeto ", spl_object_id($this), " da classe plugin versão ", $this->getVersion(), "\n";
    }

    /**
     * @return strign
     */
    public function getVersion(): string
    {
        return $this->version;
    }

    /**
     * @param string $version
     */
    public function setVersion(string $version): void
    {
        $this->version = $version;
    }

    public function activate() 
    {
        // Ao ativar o plugin automaticamente será feito uma refresh nos links permanentes.
        flush_rewrite_rules();
    }

    public function deactivate() 
    {   // Ao desativar o plugin automaticamente será feito uma refresh nos links permanentes.
        flush_rewrite_rules();
    }
}

if (class_exists('Plugin')) {
    // Define uma constante chamada: LPT_PLUGIN_FILE
    define('LPT_PLUGIN_FILE', __FILE__); // Pega o caminho completo do arquivo.


    function LPT() {
        return Plugin::getInstance();
    }

    // Instanciar 2 objetos da classe plugin
    $plugin = LPT();
  

    $plugin_2 = LPT();
    $plugin->setVersion("1.0.0");

    $plugin->checkInstance();
    $plugin_2->checkInstance();

    if ($plugin === $plugin_2) {
        echo "nos somos iguais";
    }
}

// activation
//register_activation_hook(LPT_PLUGIN_FILE, array($plugin, 'activate'));

// deactivation
//register_deactivation_hook(LPT_PLUGIN_FILE, array($plugin, 'deactivate'));